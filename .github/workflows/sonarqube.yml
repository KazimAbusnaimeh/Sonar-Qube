name: SonarQube Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write  
  checks: write  

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
          distribution: 'temurin'
          java-version: '17'

    - name: Start SonarQube
      run: |
        docker run -d --name sonarqube -p 9000:9000 \
          -v sonarqube_data:/opt/sonarqube/data \
          -v sonarqube_extensions:/opt/sonarqube/extensions \
          -v sonarqube_logs:/opt/sonarqube/logs \
          sonarqube:lts
        sleep 90  # Allow SonarQube to fully start

    - name: Wait for SonarQube to Start
      run: |
        echo "Waiting for SonarQube to be available..."
        until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do
          sleep 5
        done
        echo "SonarQube is running!"

    - name: Set up SonarQube Project
      run: |
        curl -X POST -u admin:admin "http://localhost:9000/api/projects/create" \
        -d "project=sonarqude&name=Sonarqude"

    - name: Analyze with SonarQube
      uses: SonarSource/sonarqube-scan-action@v1.1.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: "Kazimnotmalik123&"
          SONAR_HOST_URL: "http://localhost:9000"
      with:
          args: >
            -Dsonar.projectKey=sonarqude
            -Dsonar.projectName=sonarqude
            -Dsonar.host.url=http://localhost:9000
            -Dsonar.language=kotlin
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sources=src/main/
